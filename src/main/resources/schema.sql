CREATE TABLE IF NOT EXISTS mpa_rating (
	id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	name VARCHAR(20) NOT NULL 
);

CREATE TABLE IF NOT EXISTS films (
	id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	name VARCHAR(50) NOT NULL,
	description TEXT NOT NULL,
	release_date DATE NOT NULL,
	duration INTEGER NOT NULL,
	genre_id INTEGER,
	mpa_id INTEGER
	
);

CREATE TABLE IF NOT EXISTS genres (
	id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	name VARCHAR(20) NOT NULL
);

CREATE TABLE IF NOT EXISTS users (
	id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
	login VARCHAR(25) NOT NULL,
	email VARCHAR(50) NOT NULL,
	name VARCHAR(75) NOT NULL,
	birthday DATE
);

CREATE TABLE IF NOT EXISTS film_likes (
	film_id BIGINT NOT NULL,
	user_id BIGINT NOT NULL,
	CONSTRAINT likePK PRIMARY KEY(film_id, user_id)
);

CREATE TABLE IF NOT EXISTS friends (
	user_id BIGINT NOT NULL,
	friend_id BIGINT NOT NULL,
	status_code CHAR(1) NOT NULL,
	specified_date_time TIMESTAMP,
	sicifier_id BIGINT NOT NULL,
	CONSTRAINT friendsPK PRIMARY KEY (user_id, friend_id)
);

CREATE TABLE IF NOT EXISTS status_code (
	code CHAR(1) NOT NULL PRIMARY KEY,
	name VARCHAR(15)
);

ALTER TABLE films ADD CONSTRAINT fk_film_genre_id FOREIGN KEY (genre_id) REFERENCES genres(id);
ALTER TABLE films ADD CONSTRAINT fk_film_mpa_rating_id FOREIGN KEY (mpa_id) REFERENCES mpa_rating(id);
ALTER TABLE film_likes ADD CONSTRAINT fk_id_film_like_film_id FOREIGN KEY (film_id) REFERENCES films(id);
ALTER TABLE film_likes ADD CONSTRAINT fk_id_user_like_user_id FOREIGN KEY (user_id) REFERENCES users(id);
ALTER TABLE friends ADD CONSTRAINT fk_friends_friend_id_user_id FOREIGN KEY (friend_id) REFERENCES users(id);
ALTER TABLE friends ADD CONSTRAINT fk_friends_user_id_user_id FOREIGN KEY (user_id) REFERENCES users(id);
ALTER TABLE friends ADD CONSTRAINT fk_status_code FOREIGN KEY (status_code) REFERENCES status_code(code);

